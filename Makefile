# Makefile: Makefile for tyger.
#
# Copyright: (c) 2016-2022 Jacco van Schaik (jacco@jaccovanschaik.net)
# Created:   2016-08-24
#
# This software is distributed under the terms of the MIT license. See
# http://www.opensource.org/licenses/mit-license.php for details.

.PHONY: test tags version.h

TYGER = tokenizer.o tokentype.o deftype.o \
        parser.o tyger.o utils.o lang-c.o lang-python.o libtyger.a

JVS_TOP=$(HOME)
JVS_INC=-I$(JVS_TOP)/include
JVS_LIB=-L$(JVS_TOP)/lib -ljvs

CFLAGS = -g -Wall -Wpointer-arith -fPIC -std=gnu99 $(JVS_INC)

MAKE_ALIB=ar rv
MAKE_SLIB=$(CC) -shared -o

INSTALL_TOP=$(HOME)
INSTALL_BIN=$(INSTALL_TOP)/bin
INSTALL_INC=$(INSTALL_TOP)/include
INSTALL_LIB=$(INSTALL_TOP)/lib
INSTALL_PY=$(INSTALL_TOP)/.python

all: tyger libtyger.a libtyger.so

tyger: $(TYGER)
	$(CC) $(CFLAGS) -o tyger $(TYGER) $(JVS_LIB)

libtyger.a: libtyger.o
	$(MAKE_ALIB) $@ $<

libtyger.so: libtyger.o
	$(MAKE_SLIB) $@ $<

test_objects: test_objects.o Objects.o libtyger.a
	$(CC) $(CFLAGS) -o $@ $^ $(JVS_LIB)

test: tokenizer-test libtyger-test test_objects Objects.py
	./tokenizer-test
	./libtyger-test
	./test_objects
	python2 ./test_objects.py
	python3 ./test_objects.py

tokentype.c: tokentype.txt
	./gen_enum -c -p TT -t tkType $< > $@

tokentype.h: tokentype.txt
	./gen_enum -h -p TT -t tkType $< > $@

deftype.c: deftype.txt
	./gen_enum -c -p DT -t DefinitionType $< > $@

deftype.h: deftype.txt
	./gen_enum -h -p DT -t DefinitionType $< > $@

version.h:
	echo "#define VERSION" \
        \"$$(git log -n 1 --format=%cd --date=format:%Y-%m-%d/%H:%M:%S)\" \
        > version.h

tokenizer-test: tokenizer.c tokentype.o
	$(CC) $(CFLAGS) -DTEST -o $@ $^ $(JVS_LIB)

libtyger-test: libtyger.c
	$(CC) $(CFLAGS) -DTEST -o $@ $^ $(JVS_LIB)

force-install: tyger libtyger.a libtyger.so
	if [ ! -d $(INSTALL_BIN) ]; then mkdir -p $(INSTALL_BIN); fi
	cp tyger $(INSTALL_BIN)
	if [ ! -d $(INSTALL_INC) ]; then mkdir -p $(INSTALL_INC); fi
	cp libtyger.h $(INSTALL_INC)
	if [ ! -d $(INSTALL_LIB) ]; then mkdir -p $(INSTALL_LIB); fi
	cp libtyger.a libtyger.so $(INSTALL_LIB)
	if [ ! -d $(INSTALL_PY) ]; then mkdir -p $(INSTALL_PY); fi
	cp tyger.py $(INSTALL_PY)

install: test force-install

Objects.c: test/Objects.tgr tyger
	./tyger --indent='    ' --c-src $@ \
            --c-pack --c-unpack --c-packsize \
            --c-wrap --c-unwrap \
            --c-copy --c-set \
            --c-create --c-destroy --c-print $<

Objects.h: test/Objects.tgr tyger
	./tyger --indent='    ' --c-hdr $@ \
            --c-pack --c-unpack \
            --c-wrap --c-unwrap \
            --c-copy --c-set \
            --c-create --c-destroy --c-print $<

Objects.o: Objects.c Objects.h
	$(CC) $(CFLAGS) -I. -c -o $@ $<
	
Objects.py: test/Objects.tgr tyger
	./tyger --indent='    ' --python $@ \
            --py-pack --py-unpack --py-recv \
            --py-mx-send --py-mx-bcast $<

clean:
	rm -rf *.o *.pyc __pycache__ tyger \
            core vgcore.* tyger.tgz libtyger.a libtyger.so \
            tokenizer-test libtyger-test \
            test_objects Objects.c Objects.h Objects.py \
            version.h tokentype.c tokentype.h deftype.c deftype.h

tags:
	ctags -R --c-kinds=+p . $(JVS_TOP)/include /usr/include

commit:
	@echo "\033[7mGit status:\033[0m"
	@git status
	@echo -n 'Message: '
	@read msg && if [ "$$msg" != '' ]; then git commit -a -m "$$msg" && git push; fi

tyger.tgz: clean
	tar cvf - `ls | grep -v tyger.tgz` | gzip > tyger.tgz

# Dependencies - generated by deps on Sat Dec 24 09:02:37 CET 2016

Objects.o: Objects.c Objects.h
deftype.o: deftype.c deftype.h
lang-c.o: lang-c.c switches.h parser.h utils.h lang-c.h
lang-python.o: lang-python.c switches.h parser.h utils.h lang-python.h
libtyger.o: libtyger.c libtyger.h
parser.o: parser.c tokenizer.h parser.h
test_objects.o: test_objects.c Objects.h
tokenizer.o: tokenizer.c tokenizer.h tokentype.h
tokentype.o: tokentype.c tokentype.h
tyger.o: tyger.c parser.h version.h switches.h lang-c.h lang-python.h
utils.o: utils.c utils.h
